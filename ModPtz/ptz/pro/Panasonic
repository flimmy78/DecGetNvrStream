Protocol = {}

-- 表示数值可以用16或10进制(最小值，最大值)
Protocol.Attr = 
{
	-- 协议的显示名称,不能超过16字符，目前暂不支持中文
	Name = "PANASONIC",	
		
	-- 指明是云台协议还是矩阵协议，使用"PTZ", "MATRIX"表示
	Type = "PTZ",
	
	-- 以ms为单位
	Internal = 200,
				
	-- 没有对应的地址范围，请都设成0xff
	-- 云台地址范围--
	CamAddrRange 		= {1, 99}, 
	-- 监视地址范围--
	MonAddrRange		= {1, 96},	
	-- 预置点范围--
	PresetRange 		= {0xff, 0xff},
	-- 自动巡航线路范围
	TourRange		= {0xff, 0xff},
	-- 轨迹线路范围
	PatternRange		= {0x01, 0x3f},
	-- 垂直速度范围--
	TileSpeedRange 		= {0x00, 0x07},
	-- 水平速度范围--
	PanSpeedRange 		= {0x00, 0x07},
	
	-- 辅助范围
	AuxRange 		= {0x01, 0x04},
}

Protocol.CommandAttr =
{
	-- 协议中需要更改的位置，用LUA下标表示，即下标从１开始,用10进制表示
	AddrPos 			= 4, 
	PresetPos 			= 23, 
	TileSpeedPos 			= 24,
	PanSpeedPos 			= 23,
	AuxPos 				= 6,
}

Protocol.Command = 
{
	-- 写具体协议时只能用16进制或字符表示,没有的话就注释掉
	Start= 
	{
		--写上下左右, 左上，左下，右上，右下
		TileUp 		= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x41, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		TileDown	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x45, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		PanLeft 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x38, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03}, 
		PanRight 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x43, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		LeftUp 		= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x39, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		LeftDown 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		RightUp		= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x42, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		RightDown = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x46, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x36, 0x44, 0x3a, 0x32, 0x30, 0x32, 0x32, 0x58, 0x59, 0x30, 0x03},
		ZoomWide 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x43, 0x03},
		ZoomTele 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x38, 0x03},
		FocusNear	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x45, 0x03},
		FocusFar 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x41, 0x03}, 
		IrisSmall = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x30, 0x30, 0x33, 0x03},
		IrisLarge = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x30, 0x30, 0x32, 0x03},
		AutoPanOn = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x30, 0x30, 0x03},
    AutoPanOff= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x30, 0x31, 0x03},	  
	},
	Stop = 
	{
		TileUp 		= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		TileDown 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		PanLeft 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		PanRight 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		LeftUp 		= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		LeftDown 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		RightUp		= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03},
		RightDown = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x33, 0x32, 0x34, 0x03}, 		
		ZoomWide 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x34, 0x03},
		ZoomTele 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x34, 0x03},
		FocusNear = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x34, 0x03},
		FocusFar 	= {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x34, 0x03},
		IrisSmall = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x30, 0x30, 0x34, 0x03},
		IrisLarge = {0x02, 0x41, 0x44, 0x30, 0x30, 0x3b, 0x47, 0x43, 0x37, 0x3a, 0x32, 0x30, 0x32, 0x31, 0x30, 0x30, 0x34, 0x03},
	},
}

Protocol.Checksum = function (s)
	return s;
end;

Protocol.CamAddrProcess = function(s, addr)
	local newaddr = math.mod(addr, 100);
	local i    = math.floor(newaddr/10);
	local j    = math.mod(newaddr, 10);
	s[Protocol.CommandAttr.AddrPos] = i + 0x30;
	s[Protocol.CommandAttr.AddrPos + 1] = j + 0x30;

	return s;
end;

Protocol.SpeedProcess = function(s, ver, hor)
	if table.getn(s) > 18 then
		s[Protocol.CommandAttr.TileSpeedPos] = ver + 0x30;
		s[Protocol.CommandAttr.PanSpeedPos] = hor + 0x30;
	end;
	
	return s;
end;
